{"ast":null,"code":"var _jsxFileName = \"/Users/egeriicw/Personal-Projects/Udemy/react-complete-guide--v202104/src/components/Chart/ChartBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ChartBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = props => {\n  _s();\n\n  const [valueIsShown, setValueIsShown] = useState(false);\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + '%';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        onMouseEnter: () => setValueIsShown(true),\n        onMouseLeave: () => setValueIsShown(false),\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), valueIsShown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__overlayvalue\",\n      children: [\"$\", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ChartBar, \"a/id0R3bK4rhqE2fV+msIoI9//4=\");\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"sources":["/Users/egeriicw/Personal-Projects/Udemy/react-complete-guide--v202104/src/components/Chart/ChartBar.js"],"names":["React","useState","ChartBar","props","valueIsShown","setValueIsShown","barFillHeight","maxValue","Math","round","value","height","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD;AAEA,MAAIK,aAAa,GAAG,IAApB;;AAEA,MAAIH,KAAK,CAACI,QAAN,GAAiB,CAArB,EAAwB;AACpBD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAYN,KAAK,CAACO,KAAN,GAAcP,KAAK,CAACI,QAArB,GAAiC,GAA5C,IAAmD,GAAnE;AACH;;AAED,sBAAQ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AACI,QAAA,YAAY,EAAE,MAAMF,eAAe,CAAC,IAAD,CADvC;AAEI,QAAA,YAAY,EAAE,MAAMA,eAAe,CAAC,KAAD,CAFvC;AAGI,QAAA,KAAK,EAAE;AAACM,UAAAA,MAAM,EAAEL;AAAT;AAHX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKF,YAAY,iBACT;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,sBAA2CD,KAAK,CAACO,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YATR,eAWI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCP,KAAK,CAACS;AAAzC;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAcH,CAxBD;;GAAMV,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = props => {\n\n    const [valueIsShown, setValueIsShown] = useState(false);\n\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n    return (<div className='chart-bar'>\n                <div className='chart-bar__inner'>\n                    <div className='chart-bar__fill' \n                        onMouseEnter={() => setValueIsShown(true)} \n                        onMouseLeave={() => setValueIsShown(false)} \n                        style={{height: barFillHeight}}>\n                    </div>\n                </div>\n                {valueIsShown && (\n                    <div className='chart-bar__overlayvalue'>${props.value}</div>\n                )}\n                <div className='chart-bar__label'>{props.label}</div>\n            </div>);\n\n};\n\nexport default ChartBar;"]},"metadata":{},"sourceType":"module"}