{"ast":null,"code":"var _jsxFileName = \"/Users/egeriicw/Personal-Projects/Udemy/react-complete-guide--v202104/src/components/Expenses/ExpenseItem.js\";\nimport React, { useState } from 'react';\nimport './ExpenseItem.css';\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  // dumb component or presentational component. stateless component. It's \n  // really what we want to have more of these. We want to chop up our \n  // app into numerous, small components. \n  // Only a few components should management state as stateful components. \n  // Manage state in only a few components and pass around state for use.\n  // use array destructuring. 1st is a state value and the 2nd is the update function\n  // const [title, setTitle] = useState(props.title);\n  // const clickHandler = () => {\n  //   setTitle(\"Updated!\");\n  //   console.log(title);\n  // }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Users/egeriicw/Personal-Projects/Udemy/react-complete-guide--v202104/src/components/Expenses/ExpenseItem.js"],"names":["React","useState","Card","ExpenseDate","ExpenseItem","props","date","title","amount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,wBAAuCF,KAAK,CAACG,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CA1BD;;KAAMJ,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseItem.css';\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\n\nconst ExpenseItem = (props) => {\n\n    // dumb component or presentational component. stateless component. It's \n    // really what we want to have more of these. We want to chop up our \n    // app into numerous, small components. \n    // Only a few components should management state as stateful components. \n    // Manage state in only a few components and pass around state for use.\n\n    // use array destructuring. 1st is a state value and the 2nd is the update function\n    // const [title, setTitle] = useState(props.title);\n\n    // const clickHandler = () => {\n    //   setTitle(\"Updated!\");\n    //   console.log(title);\n    // }\n\n    return (\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date}/>\n        <div className=\"expense-item__description\">\n            <h2>{title}</h2>\n            <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        {/* <button onClick={clickHandler}>Click Title</button> */}\n      </Card>\n    );\n}\n\nexport default ExpenseItem;"]},"metadata":{},"sourceType":"module"}